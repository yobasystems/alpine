# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
stages:
- build
- test
- manifest
- deploy
include:
- remote: https://gitlab.com/yobasystems/gitlab-ci-templates/raw/master/container_scanning_all_arch.yml
- template: Security/Secret-Detection.gitlab-ci.yml
- template: Security/SAST.gitlab-ci.yml
amd64 latest build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
  - amd64
  variables:
    CI_APPLICATION_REPOSITORY: "$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG"
    CI_APPLICATION_TAG: "$CI_COMMIT_SHA"
  script:
  - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
  - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
  - apk add --update git
  - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
  - cd alpine-3.21.1/amd64/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA}
    --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:x86_64
    -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:amd64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:x86_64
    -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:amd64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:x86_64
    -t $DOCKER_REGISTRY_DOCKERHUB_REPO:amd64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:x86_64
    -t $DOCKER_REGISTRY_DOCKERHUB_REPO:amd64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:x86_64
    -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:amd64 --platform linux/amd64 .
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:x86_64
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:amd64
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:x86_64
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:amd64
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:x86_64
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:amd64
arm32v7 latest build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
  - armhf
  variables:
    CI_APPLICATION_REPOSITORY: "$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG"
    CI_APPLICATION_TAG: "$CI_COMMIT_SHA"
  script:
  - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
  - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
  - apk add --update git
  - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
  - cd alpine-3.21.1/arm32v7/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA}
    --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:arm32v7
    -t $DOCKER_REGISTRY_DOCKERHUB_REPO:arm32v7 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:arm32v7
    -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:armhf -t $DOCKER_REGISTRY_DOCKERHUB_REPO:armhf
    -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:armhf --platform linux/arm/v7 .
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:arm32v7
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:armhf
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:arm32v7
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:armhf
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:arm32v7
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:armhf
arm64v8 latest build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
  - aarch64
  variables:
    CI_APPLICATION_REPOSITORY: "$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG"
    CI_APPLICATION_TAG: "$CI_COMMIT_SHA"
  script:
  - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
  - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
  - apk add --update git
  - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
  - cd alpine-3.21.1/arm64v8/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA}
    --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:arm64v8
    -t $DOCKER_REGISTRY_DOCKERHUB_REPO:arm64v8 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:arm64v8
    -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:aarch64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:aarch64
    -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:aarch64 --platform linux/arm64/v8 .
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:arm64v8
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:aarch64
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:arm64v8
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:aarch64
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:arm64v8
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:aarch64
amd64 3.21.1 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
  - amd64
  variables:
    CI_APPLICATION_REPOSITORY: "$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG"
    CI_APPLICATION_TAG: "$CI_COMMIT_SHA"
  script:
  - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
  - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
  - apk add --update git
  - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
  - cd alpine-3.21.1/amd64/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA}
    --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21-x86_64
    -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21.1-x86_64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21.1-amd64
    -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21-amd64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21.1-x86_64
    -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21-x86_64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21.1-amd64
    -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21-amd64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.21.1-x86_64
    -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.21-x86_64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.21.1-amd64
    -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.21-amd64 --platform linux/amd64 .
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21.1-x86_64
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21-x86_64
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21.1-amd64
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21-amd64
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21.1-x86_64
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21-x86_64
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21.1-amd64
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21-amd64
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.21.1-x86_64
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.21-x86_64
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.21.1-amd64
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.21-amd64
arm32v7 3.21.1 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
  - armhf
  variables:
    CI_APPLICATION_REPOSITORY: "$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG"
    CI_APPLICATION_TAG: "$CI_COMMIT_SHA"
  script:
  - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
  - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
  - apk add --update git
  - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
  - cd alpine-3.21.1/arm32v7/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA}
    --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21.1-armhf
    -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21-armhf -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21.1-armhf
    -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21-armhf -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.21.1-armhf
    -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.21-armhf -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21.1-arm32v7
    -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21-arm32v7 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21.1-arm32v7
    -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21-arm32v7 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.21.1-arm32v7
    -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.21-arm32v7 --platform linux/arm/v7 .
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21.1-arm32v7
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21-arm32v7
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21.1-armhf
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21-armhf
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21.1-arm32v7
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21-arm32v7
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21.1-armhf
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21-armhf
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.21.1-arm32v7
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.21-arm32v7
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.21.1-armhf
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.21-armhf
arm64v8 3.21.1 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
  - aarch64
  variables:
    CI_APPLICATION_REPOSITORY: "$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG"
    CI_APPLICATION_TAG: "$CI_COMMIT_SHA"
  script:
  - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
  - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
  - apk add --update git
  - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
  - cd alpine-3.21.1/arm64v8/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA}
    --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21.1-aarch64
    -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21-aarch64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21.1-aarch64
    -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21-aarch64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.21.1-aarch64
    -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.21-aarch64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21.1-arm64v8
    -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21-arm64v8 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21.1-arm64v8
    -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21-arm64v8 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.21.1-arm64v8
    -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.21-arm64v8 --platform linux/arm64/v8 .
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21.1-arm64v8
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21-arm64v8
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21.1-aarch64
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21-aarch64
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21.1-arm64v8
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21-arm64v8
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21.1-aarch64
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21-aarch64
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.21.1-arm64v8
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.21-arm64v8
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.21.1-aarch64
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.21-aarch64
amd64 3.20.4 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
  - amd64
  variables:
    CI_APPLICATION_REPOSITORY: "$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG"
    CI_APPLICATION_TAG: "$CI_COMMIT_SHA"
  script:
  - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
  - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
  - apk add --update git
  - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
  - cd alpine-3.20.4/amd64/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA}
    --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20-x86_64
    -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20.4-x86_64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20.4-amd64
    -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20-amd64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20.4-x86_64
    -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20-x86_64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20.4-amd64
    -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20-amd64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.20.4-x86_64
    -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.20-x86_64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.20.4-amd64
    -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.20-amd64 --platform linux/amd64 .
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20.4-x86_64
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20-x86_64
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20.4-amd64
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20-amd64
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20.4-x86_64
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20-x86_64
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20.4-amd64
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20-amd64
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.20.4-x86_64
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.20-x86_64
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.20.4-amd64
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.20-amd64
arm32v7 3.20.4 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
  - armhf
  variables:
    CI_APPLICATION_REPOSITORY: "$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG"
    CI_APPLICATION_TAG: "$CI_COMMIT_SHA"
  script:
  - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
  - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
  - apk add --update git
  - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
  - cd alpine-3.20.4/arm32v7/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA}
    --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20.4-armhf
    -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20-armhf -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20.4-armhf
    -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20-armhf -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.20.4-armhf
    -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.20-armhf -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20.4-arm32v7
    -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20-arm32v7 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20.4-arm32v7
    -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20-arm32v7 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.20.4-arm32v7
    -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.20-arm32v7 --platform linux/arm/v7 .
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20.4-arm32v7
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20-arm32v7
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20.4-armhf
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20-armhf
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20.4-arm32v7
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20-arm32v7
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20.4-armhf
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20-armhf
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.20.4-arm32v7
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.20-arm32v7
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.20.4-armhf
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.20-armhf
arm64v8 3.20.4 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
  - aarch64
  variables:
    CI_APPLICATION_REPOSITORY: "$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG"
    CI_APPLICATION_TAG: "$CI_COMMIT_SHA"
  script:
  - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
  - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
  - apk add --update git
  - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
  - cd alpine-3.20.4/arm64v8/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA}
    --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20.4-aarch64
    -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20-aarch64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20.4-aarch64
    -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20-aarch64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.20.4-aarch64
    -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.20-aarch64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20.4-arm64v8
    -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20-arm64v8 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20.4-arm64v8
    -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20-arm64v8 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.20.4-arm64v8
    -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.20-arm64v8 --platform linux/arm64/v8 .
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20.4-arm64v8
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20-arm64v8
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20.4-aarch64
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20-aarch64
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20.4-arm64v8
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20-arm64v8
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20.4-aarch64
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20-aarch64
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.20.4-arm64v8
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.20-arm64v8
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.20.4-aarch64
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.20-aarch64
amd64 3.19.5 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
  - amd64
  variables:
    CI_APPLICATION_REPOSITORY: "$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG"
    CI_APPLICATION_TAG: "$CI_COMMIT_SHA"
  script:
  - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
  - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
  - apk add --update git
  - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
  - cd alpine-3.19.5/amd64/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA}
    --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19-x86_64
    -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19.5-x86_64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19.5-amd64
    -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19-amd64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19.5-x86_64
    -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19-x86_64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19.5-amd64
    -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19-amd64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.19.5-x86_64
    -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.19-x86_64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.19.5-amd64
    -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.19-amd64 --platform linux/amd64 .
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19.5-x86_64
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19-x86_64
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19.5-amd64
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19-amd64
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19.5-x86_64
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19-x86_64
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19.5-amd64
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19-amd64
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.19.5-x86_64
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.19-x86_64
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.19.5-amd64
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.19-amd64
arm32v7 3.19.5 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
  - armhf
  variables:
    CI_APPLICATION_REPOSITORY: "$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG"
    CI_APPLICATION_TAG: "$CI_COMMIT_SHA"
  script:
  - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
  - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
  - apk add --update git
  - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
  - cd alpine-3.19.5/arm32v7/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA}
    --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19.5-armhf
    -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19-armhf -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19.5-armhf
    -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19-armhf -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.19.5-armhf
    -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.19-armhf -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19.5-arm32v7
    -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19-arm32v7 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19.5-arm32v7
    -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19-arm32v7 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.19.5-arm32v7
    -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.19-arm32v7 --platform linux/arm/v7 .
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19.5-arm32v7
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19-arm32v7
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19.5-armhf
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19-armhf
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19.5-arm32v7
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19-arm32v7
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19.5-armhf
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19-armhf
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.19.5-arm32v7
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.19-arm32v7
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.19.5-armhf
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.19-armhf
arm64v8 3.19.5 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
  - aarch64
  variables:
    CI_APPLICATION_REPOSITORY: "$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG"
    CI_APPLICATION_TAG: "$CI_COMMIT_SHA"
  script:
  - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
  - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
  - apk add --update git
  - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
  - cd alpine-3.19.5/arm64v8/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA}
    --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19.5-aarch64
    -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19-aarch64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19.5-aarch64
    -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19-aarch64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.19.5-aarch64
    -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.19-aarch64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19.5-arm64v8
    -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19-arm64v8 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19.5-arm64v8
    -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19-arm64v8 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.19.5-arm64v8
    -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.19-arm64v8 --platform linux/arm64/v8 .
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19.5-arm64v8
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19-arm64v8
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19.5-aarch64
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19-aarch64
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19.5-arm64v8
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19-arm64v8
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19.5-aarch64
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19-aarch64
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.19.5-arm64v8
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.19-arm64v8
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.19.5-aarch64
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.19-aarch64
amd64 3.18.10 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
  - amd64
  variables:
    CI_APPLICATION_REPOSITORY: "$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG"
    CI_APPLICATION_TAG: "$CI_COMMIT_SHA"
  script:
  - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
  - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
  - apk add --update git
  - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
  - cd alpine-3.18.10/amd64/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA}
    --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18-x86_64
    -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18.10-x86_64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18.10-amd64
    -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18-amd64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18.10-x86_64
    -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18-x86_64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18.10-amd64
    -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18-amd64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.18.10-x86_64
    -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.18-x86_64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.18.10-amd64
    -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.18-amd64 --platform linux/amd64 .
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18.10-x86_64
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18-x86_64
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18.10-amd64
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18-amd64
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18.10-x86_64
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18-x86_64
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18.10-amd64
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18-amd64
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.18.10-x86_64
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.18-x86_64
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.18.10-amd64
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.18-amd64
arm32v7 3.18.10 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
  - armhf
  variables:
    CI_APPLICATION_REPOSITORY: "$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG"
    CI_APPLICATION_TAG: "$CI_COMMIT_SHA"
  script:
  - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
  - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
  - apk add --update git
  - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
  - cd alpine-3.18.10/arm32v7/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA}
    --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18.10-armhf
    -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18-armhf -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18.10-armhf
    -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18-armhf -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.18.10-armhf
    -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.18-armhf -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18.10-arm32v7
    -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18-arm32v7 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18.10-arm32v7
    -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18-arm32v7 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.18.10-arm32v7
    -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.18-arm32v7 --platform linux/arm/v7 .
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18.10-arm32v7
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18-arm32v7
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18.10-armhf
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18-armhf
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18.10-arm32v7
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18-arm32v7
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18.10-armhf
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18-armhf
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.18.10-arm32v7
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.18-arm32v7
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.18.10-armhf
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.18-armhf
arm64v8 3.18.10 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
  - aarch64
  variables:
    CI_APPLICATION_REPOSITORY: "$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG"
    CI_APPLICATION_TAG: "$CI_COMMIT_SHA"
  script:
  - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
  - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
  - apk add --update git
  - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
  - cd alpine-3.18.10/arm64v8/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA}
    --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18.10-aarch64
    -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18-aarch64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18.10-aarch64
    -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18-aarch64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.18.10-aarch64
    -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.18-aarch64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18.10-arm64v8
    -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18-arm64v8 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18.10-arm64v8
    -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18-arm64v8 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.18.10-arm64v8
    -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.18-arm64v8 --platform linux/arm64/v8 .
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18.10-arm64v8
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18-arm64v8
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18.10-aarch64
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18-aarch64
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18.10-arm64v8
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18-arm64v8
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18.10-aarch64
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18-aarch64
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.18.10-arm64v8
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.18-arm64v8
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.18.10-aarch64
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.18-aarch64
gitlab manifest creation latest:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
  - manifest
  script:
  - mkdir /root/.docker
  - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
  - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
  - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:amd64
  - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:arm32v7
  - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:arm64v8
  - docker manifest create $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:latest $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:amd64
    $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:arm32v7 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:arm64v8
  - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:latest $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:amd64
    --os linux --arch amd64
  - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:latest $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:arm32v7
    --os linux --arch arm --variant 7
  - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:latest $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:arm64v8
    --os linux --arch arm64 --variant 8
  - docker manifest push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:latest
dockerhub manifest creation latest:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
  - manifest
  script:
  - mkdir /root/.docker
  - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
  - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:amd64
  - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:arm32v7
  - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:arm64v8
  - docker manifest create $DOCKER_REGISTRY_DOCKERHUB_REPO:latest $DOCKER_REGISTRY_DOCKERHUB_REPO:amd64
    $DOCKER_REGISTRY_DOCKERHUB_REPO:arm32v7 $DOCKER_REGISTRY_DOCKERHUB_REPO:arm64v8
  - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:latest $DOCKER_REGISTRY_DOCKERHUB_REPO:amd64
    --os linux --arch amd64
  - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:latest $DOCKER_REGISTRY_DOCKERHUB_REPO:arm32v7
    --os linux --arch arm --variant 7
  - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:latest $DOCKER_REGISTRY_DOCKERHUB_REPO:arm64v8
    --os linux --arch arm64 --variant 8
  - docker manifest push $DOCKER_REGISTRY_DOCKERHUB_REPO:latest
gitlab manifest creation 3.21:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
  - manifest
  script:
  - mkdir /root/.docker
  - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
  - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
  - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21-amd64
  - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21-arm32v7
  - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21-arm64v8
  - docker manifest create $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21-amd64
    $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21-arm32v7 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21-arm64v8
  - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21-amd64
    --os linux --arch amd64
  - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21-arm32v7
    --os linux --arch arm --variant 7
  - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21-arm64v8
    --os linux --arch arm64 --variant 8
  - docker manifest push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21
dockerhub manifest creation 3.21:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
  - manifest
  script:
  - mkdir /root/.docker
  - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
  - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21-amd64
  - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21-arm32v7
  - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21-arm64v8
  - docker manifest create $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21-amd64
    $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21-arm32v7 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21-arm64v8
  - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21-amd64
    --os linux --arch amd64
  - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21-arm32v7
    --os linux --arch arm --variant 7
  - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21-arm64v8
    --os linux --arch arm64 --variant 8
  - docker manifest push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21
gitlab manifest creation 3.21.1:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
  - manifest
  script:
  - mkdir /root/.docker
  - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
  - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
  - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21.1-amd64
  - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21.1-arm32v7
  - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21.1-arm64v8
  - docker manifest create $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21.1 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21.1-amd64
    $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21.1-arm32v7 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21.1-arm64v8
  - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21.1 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21.1-amd64
    --os linux --arch amd64
  - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21.1 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21.1-arm32v7
    --os linux --arch arm --variant 7
  - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21.1 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21.1-arm64v8
    --os linux --arch arm64 --variant 8
  - docker manifest push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.21.1
dockerhub manifest creation 3.21.1:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
  - manifest
  script:
  - mkdir /root/.docker
  - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
  - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21.1-amd64
  - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21.1-arm32v7
  - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21.1-arm64v8
  - docker manifest create $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21.1 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21.1-amd64
    $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21.1-arm32v7 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21.1-arm64v8
  - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21.1 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21.1-amd64
    --os linux --arch amd64
  - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21.1 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21.1-arm32v7
    --os linux --arch arm --variant 7
  - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21.1 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21.1-arm64v8
    --os linux --arch arm64 --variant 8
  - docker manifest push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.21.1
gitlab manifest creation 3.20:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
  - manifest
  script:
  - mkdir /root/.docker
  - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
  - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
  - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20-amd64
  - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20-arm32v7
  - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20-arm64v8
  - docker manifest create $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20-amd64
    $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20-arm32v7 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20-arm64v8
  - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20-amd64
    --os linux --arch amd64
  - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20-arm32v7
    --os linux --arch arm --variant 7
  - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20-arm64v8
    --os linux --arch arm64 --variant 8
  - docker manifest push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20
dockerhub manifest creation 3.20:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
  - manifest
  script:
  - mkdir /root/.docker
  - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
  - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20-amd64
  - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20-arm32v7
  - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20-arm64v8
  - docker manifest create $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20-amd64
    $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20-arm32v7 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20-arm64v8
  - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20-amd64
    --os linux --arch amd64
  - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20-arm32v7
    --os linux --arch arm --variant 7
  - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20-arm64v8
    --os linux --arch arm64 --variant 8
  - docker manifest push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20
gitlab manifest creation 3.20.4:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
  - manifest
  script:
  - mkdir /root/.docker
  - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
  - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
  - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20.4-amd64
  - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20.4-arm32v7
  - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20.4-arm64v8
  - docker manifest create $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20.4 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20.4-amd64
    $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20.4-arm32v7 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20.4-arm64v8
  - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20.4 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20.4-amd64
    --os linux --arch amd64
  - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20.4 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20.4-arm32v7
    --os linux --arch arm --variant 7
  - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20.4 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20.4-arm64v8
    --os linux --arch arm64 --variant 8
  - docker manifest push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.20.4
dockerhub manifest creation 3.20.4:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
  - manifest
  script:
  - mkdir /root/.docker
  - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
  - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20.4-amd64
  - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20.4-arm32v7
  - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20.4-arm64v8
  - docker manifest create $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20.4 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20.4-amd64
    $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20.4-arm32v7 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20.4-arm64v8
  - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20.4 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20.4-amd64
    --os linux --arch amd64
  - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20.4 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20.4-arm32v7
    --os linux --arch arm --variant 7
  - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20.4 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20.4-arm64v8
    --os linux --arch arm64 --variant 8
  - docker manifest push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.20.4
gitlab manifest creation 3.19:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
  - manifest
  script:
  - mkdir /root/.docker
  - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
  - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
  - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19-amd64
  - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19-arm32v7
  - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19-arm64v8
  - docker manifest create $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19-amd64
    $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19-arm32v7 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19-arm64v8
  - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19-amd64
    --os linux --arch amd64
  - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19-arm32v7
    --os linux --arch arm --variant 7
  - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19-arm64v8
    --os linux --arch arm64 --variant 8
  - docker manifest push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19
dockerhub manifest creation 3.19:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
  - manifest
  script:
  - mkdir /root/.docker
  - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
  - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19-amd64
  - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19-arm32v7
  - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19-arm64v8
  - docker manifest create $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19-amd64
    $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19-arm32v7 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19-arm64v8
  - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19-amd64
    --os linux --arch amd64
  - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19-arm32v7
    --os linux --arch arm --variant 7
  - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19-arm64v8
    --os linux --arch arm64 --variant 8
  - docker manifest push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19
gitlab manifest creation 3.19.5:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
  - manifest
  script:
  - mkdir /root/.docker
  - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
  - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
  - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19.5-amd64
  - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19.5-arm32v7
  - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19.5-arm64v8
  - docker manifest create $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19.5 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19.5-amd64
    $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19.5-arm32v7 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19.5-arm64v8
  - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19.5 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19.5-amd64
    --os linux --arch amd64
  - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19.5 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19.5-arm32v7
    --os linux --arch arm --variant 7
  - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19.5 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19.5-arm64v8
    --os linux --arch arm64 --variant 8
  - docker manifest push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.19.5
dockerhub manifest creation 3.19.5:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
  - manifest
  script:
  - mkdir /root/.docker
  - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
  - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19.5-amd64
  - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19.5-arm32v7
  - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19.5-arm64v8
  - docker manifest create $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19.5 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19.5-amd64
    $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19.5-arm32v7 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19.5-arm64v8
  - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19.5 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19.5-amd64
    --os linux --arch amd64
  - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19.5 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19.5-arm32v7
    --os linux --arch arm --variant 7
  - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19.5 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19.5-arm64v8
    --os linux --arch arm64 --variant 8
  - docker manifest push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.19.5
gitlab manifest creation 3.18:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
  - manifest
  script:
  - mkdir /root/.docker
  - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
  - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
  - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18-amd64
  - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18-arm32v7
  - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18-arm64v8
  - docker manifest create $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18-amd64
    $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18-arm32v7 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18-arm64v8
  - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18-amd64
    --os linux --arch amd64
  - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18-arm32v7
    --os linux --arch arm --variant 7
  - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18-arm64v8
    --os linux --arch arm64 --variant 8
  - docker manifest push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18
dockerhub manifest creation 3.18:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
  - manifest
  script:
  - mkdir /root/.docker
  - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
  - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18-amd64
  - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18-arm32v7
  - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18-arm64v8
  - docker manifest create $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18-amd64
    $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18-arm32v7 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18-arm64v8
  - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18-amd64
    --os linux --arch amd64
  - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18-arm32v7
    --os linux --arch arm --variant 7
  - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18-arm64v8
    --os linux --arch arm64 --variant 8
  - docker manifest push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18
gitlab manifest creation 3.18.10:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
  - manifest
  script:
  - mkdir /root/.docker
  - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
  - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
  - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18.10-amd64
  - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18.10-arm32v7
  - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18.10-arm64v8
  - docker manifest create $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18.10 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18.10-amd64
    $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18.10-arm32v7 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18.10-arm64v8
  - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18.10 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18.10-amd64
    --os linux --arch amd64
  - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18.10 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18.10-arm32v7
    --os linux --arch arm --variant 7
  - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18.10 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18.10-arm64v8
    --os linux --arch arm64 --variant 8
  - docker manifest push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.18.10
dockerhub manifest creation 3.18.10:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
  - manifest
  script:
  - mkdir /root/.docker
  - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
  - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18.10-amd64
  - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18.10-arm32v7
  - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18.10-arm64v8
  - docker manifest create $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18.10 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18.10-amd64
    $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18.10-arm32v7 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18.10-arm64v8
  - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18.10 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18.10-amd64
    --os linux --arch amd64
  - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18.10 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18.10-arm32v7
    --os linux --arch arm --variant 7
  - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18.10 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18.10-arm64v8
    --os linux --arch arm64 --variant 8
  - docker manifest push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.18.10
sast:
  stage: test
