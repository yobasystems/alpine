stages:
  - build
  - test
  - manifest
  - deploy

include:
  - remote: 'https://gitlab.com/yobasystems/gitlab-ci-templates/raw/master/container_scanning_all_arch.yml'

amd64 latest build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - amd64
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.14.0/amd64/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:x86_64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:amd64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:x86_64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:amd64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:x86_64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:amd64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:x86_64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:amd64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:x86_64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:amd64 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:x86_64
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:amd64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:x86_64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:amd64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:x86_64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:amd64

arm32v7 latest build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - armhf
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.14.0/arm32v7/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:arm32v7 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:arm32v7 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:arm32v7 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:armhf -t $DOCKER_REGISTRY_DOCKERHUB_REPO:armhf -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:armhf .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:arm32v7
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:armhf
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:arm32v7
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:armhf
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:arm32v7
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:armhf

arm64v8 latest build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - aarch64
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.14.0/arm64v8/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:arm64v8 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:arm64v8 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:arm64v8 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:aarch64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:aarch64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:aarch64 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:arm64v8
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:aarch64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:arm64v8
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:aarch64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:arm64v8
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:aarch64

amd64 3.14.0 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - amd64
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.14.0/amd64/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.14-x86_64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.14.0-x86_64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.14.0-amd64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.14-amd64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.14.0-x86_64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.14-x86_64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.14.0-amd64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.14-amd64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.14.0-x86_64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.14-x86_64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.14.0-amd64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.14-amd64 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.14.0-x86_64
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.14-x86_64
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.14.0-amd64
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.14-amd64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.14.0-x86_64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.14-x86_64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.14.0-amd64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.14-amd64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.14.0-x86_64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.14-x86_64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.14.0-amd64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.14-amd64

arm32v7 3.14.0 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - armhf
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.14.0/arm32v7/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.14.0-armhf -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.14-armhf -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.14.0-armhf -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.14-armhf -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.14.0-armhf -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.14-armhf -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.14.0-arm32v7 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.14-arm32v7 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.14.0-arm32v7 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.14-arm32v7 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.14.0-arm32v7 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.14-arm32v7 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.14.0-arm32v7
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.14-arm32v7
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.14.0-armhf
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.14-armhf
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.14.0-arm32v7
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.14-arm32v7
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.14.0-armhf
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.14-armhf
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.14.0-arm32v7
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.14-arm32v7
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.14.0-armhf
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.14-armhf

arm64v8 3.14.0 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - aarch64
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.14.0/arm64v8/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.14.0-aarch64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.14-aarch64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.14.0-aarch64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.14-aarch64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.14.0-aarch64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.14-aarch64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.14.0-arm64v8 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.14-arm64v8 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.14.0-arm64v8 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.14-arm64v8 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.14.0-arm64v8 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.14-arm64v8 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.14.0-arm64v8
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.14-arm64v8
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.14.0-aarch64
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.14-aarch64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.14.0-arm64v8
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.14-arm64v8
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.14.0-aarch64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.14-aarch64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.14.0-arm64v8
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.14-arm64v8
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.14.0-aarch64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.14-aarch64

amd64 3.13.5 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - amd64
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.13.5/amd64/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13-x86_64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13.5-x86_64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13.5-amd64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13-amd64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13.5-x86_64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13-x86_64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13.5-amd64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13-amd64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.13.5-x86_64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.13-x86_64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.13.5-amd64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.13-amd64 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13.5-x86_64
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13-x86_64
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13.5-amd64
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13-amd64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13.5-x86_64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13-x86_64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13.5-amd64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13-amd64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.13.5-x86_64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.13-x86_64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.13.5-amd64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.13-amd64

arm32v7 3.13.5 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - armhf
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.13.5/arm32v7/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13.5-armhf -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13-armhf -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13.5-armhf -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13-armhf -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.13.5-armhf -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.13-armhf -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13.5-arm32v7 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13-arm32v7 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13.5-arm32v7 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13-arm32v7 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.13.5-arm32v7 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.13-arm32v7 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13.5-arm32v7
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13-arm32v7
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13.5-armhf
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13-armhf
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13.5-arm32v7
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13-arm32v7
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13.5-armhf
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13-armhf
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.13.5-arm32v7
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.13-arm32v7
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.13.5-armhf
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.13-armhf

arm64v8 3.13.5 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - aarch64
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.13.5/arm64v8/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13.5-aarch64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13-aarch64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13.5-aarch64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13-aarch64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.13.5-aarch64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.13-aarch64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13.5-arm64v8 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13-arm64v8 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13.5-arm64v8 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13-arm64v8 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.13.5-arm64v8 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.13-arm64v8 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13.5-arm64v8
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13-arm64v8
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13.5-aarch64
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13-aarch64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13.5-arm64v8
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13-arm64v8
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13.5-aarch64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13-aarch64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.13.5-arm64v8
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.13-arm64v8
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.13.5-aarch64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.13-aarch64

amd64 3.12.7 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - amd64
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.12.7/amd64/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12-x86_64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.7-x86_64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.7-amd64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12-amd64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.7-x86_64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12-x86_64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.7-amd64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12-amd64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.12.7-x86_64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.12-x86_64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.12.7-amd64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.12-amd64 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.7-x86_64
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12-x86_64
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.7-amd64
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12-amd64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.7-x86_64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12-x86_64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.7-amd64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12-amd64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.12.7-x86_64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.12-x86_64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.12.7-amd64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.12-amd64

arm32v7 3.12.7 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - armhf
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.12.7/arm32v7/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.7-armhf -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12-armhf -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.7-armhf -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12-armhf -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.12.7-armhf -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.12-armhf -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.7-arm32v7 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12-arm32v7 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.7-arm32v7 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12-arm32v7 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.12.7-arm32v7 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.12-arm32v7 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.7-arm32v7
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12-arm32v7
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.7-armhf
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12-armhf
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.7-arm32v7
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12-arm32v7
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.7-armhf
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12-armhf
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.12.7-arm32v7
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.12-arm32v7
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.12.7-armhf
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.12-armhf

arm64v8 3.12.7 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - aarch64
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.12.7/arm64v8/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.7-aarch64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12-aarch64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.7-aarch64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12-aarch64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.12.7-aarch64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.12-aarch64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.7-arm64v8 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12-arm64v8 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.7-arm64v8 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12-arm64v8 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.12.7-arm64v8 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.12-arm64v8 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.7-arm64v8
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12-arm64v8
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.7-aarch64
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12-aarch64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.7-arm64v8
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12-arm64v8
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.7-aarch64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12-aarch64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.12.7-arm64v8
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.12-arm64v8
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.12.7-aarch64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.12-aarch64

amd64 3.12.0 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - amd64
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.12.0/amd64/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.0-x86_64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.0-amd64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.0-x86_64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.0-amd64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.12.0-x86_64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.12.0-amd64 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.0-x86_64
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.0-amd64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.0-x86_64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.0-amd64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.12.0-x86_64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.12.0-amd64

arm32v7 3.12.0 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - armhf
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.12.0/arm32v7/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.0-armhf -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.0-armhf -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.12.0-armhf -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.0-arm32v7 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.0-arm32v7 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.12.0-arm32v7 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.0-arm32v7
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.0-armhf
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.0-arm32v7
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.0-armhf
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.12.0-arm32v7
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.12.0-armhf

arm64v8 3.12.0 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - aarch64
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.12.0/arm64v8/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.0-aarch64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.0-aarch64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.12.0-aarch64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.0-arm64v8 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.0-arm64v8 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.12.0-arm64v8 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.0-arm64v8
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.0-aarch64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.0-arm64v8
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.0-aarch64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.12.0-arm64v8
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.12.0-aarch64

amd64 3.11.11 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - amd64
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.11.11/amd64/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11-x86_64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.11-x86_64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.11-amd64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11-amd64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.11-x86_64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11-x86_64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.11-amd64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11-amd64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.11-x86_64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11-x86_64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.11-amd64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11-amd64 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.11-x86_64
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11-x86_64
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.11-amd64
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11-amd64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.11-x86_64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11-x86_64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.11-amd64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11-amd64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.11-x86_64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11-x86_64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.11-amd64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11-amd64

arm32v7 3.11.11 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - armhf
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.11.11/arm32v7/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.11-armhf -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11-armhf -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.11-armhf -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11-armhf -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.11-armhf -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11-armhf -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.11-arm32v7 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11-arm32v7 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.11-arm32v7 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11-arm32v7 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.11-arm32v7 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11-arm32v7 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.11-arm32v7
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11-arm32v7
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.11-armhf
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11-armhf
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.11-arm32v7
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11-arm32v7
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.11-armhf
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11-armhf
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.11-arm32v7
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11-arm32v7
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.11-armhf
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11-armhf

arm64v8 3.11.11 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - aarch64
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.11.11/arm64v8/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.11-aarch64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11-aarch64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.11-aarch64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11-aarch64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.11-aarch64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11-aarch64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.11-arm64v8 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11-arm64v8 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.11-arm64v8 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11-arm64v8 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.11-arm64v8 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11-arm64v8 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.11-arm64v8
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11-arm64v8
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.11-aarch64
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11-aarch64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.11-arm64v8
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11-arm64v8
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.11-aarch64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11-aarch64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.11-arm64v8
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11-arm64v8
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.11-aarch64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11-aarch64

amd64 3.11.6 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - amd64
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.11.6/amd64/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.6-x86_64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.6-amd64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.6-x86_64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.6-amd64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.6-x86_64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.6-amd64 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.6-x86_64
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.6-amd64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.6-x86_64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.6-amd64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.6-x86_64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.6-amd64

arm32v7 3.11.6 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - armhf
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.11.6/arm32v7/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.6-armhf -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.6-armhf -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.6-armhf -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.6-arm32v7 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.6-arm32v7 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.6-arm32v7 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.6-arm32v7
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.6-armhf
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.6-arm32v7
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.6-armhf
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.6-arm32v7
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.6-armhf

arm64v8 3.11.6 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - aarch64
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.11.6/arm64v8/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.6-aarch64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.6-aarch64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.6-aarch64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.6-arm64v8 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.6-arm64v8 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.6-arm64v8 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.6-arm64v8
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.6-aarch64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.6-arm64v8
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.6-aarch64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.6-arm64v8
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.6-aarch64

amd64 3.11.5 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - amd64
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.11.5/amd64/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.5-x86_64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.5-amd64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.5-x86_64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.5-amd64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.5-x86_64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.5-amd64 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.5-x86_64
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.5-amd64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.5-x86_64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.5-amd64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.5-x86_64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.5-amd64

arm32v7 3.11.5 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - armhf
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.11.5/arm32v7/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.5-armhf -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.5-armhf -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.5-armhf -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.5-arm32v7 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.5-arm32v7 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.5-arm32v7 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.5-arm32v7
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.5-armhf
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.5-arm32v7
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.5-armhf
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.5-arm32v7
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.5-armhf

arm64v8 3.11.5 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - aarch64
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.11.5/arm64v8/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.5-aarch64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.5-aarch64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.5-aarch64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.5-arm64v8 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.5-arm64v8 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.5-arm64v8 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.5-arm64v8
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.5-aarch64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.5-arm64v8
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.5-aarch64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.5-arm64v8
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.5-aarch64

amd64 3.11.3 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - amd64
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.11.3/amd64/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.3-x86_64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.3-amd64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.3-x86_64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.3-amd64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.3-x86_64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.3-amd64 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.3-x86_64
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.3-amd64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.3-x86_64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.3-amd64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.3-x86_64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.3-amd64

arm32v7 3.11.3 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - armhf
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.11.3/arm32v7/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.3-armhf -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.3-armhf -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.3-armhf -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.3-arm32v7 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.3-arm32v7 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.3-arm32v7 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.3-arm32v7
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.3-armhf
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.3-arm32v7
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.3-armhf
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.3-arm32v7
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.3-armhf

arm64v8 3.11.3 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - aarch64
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.11.3/arm64v8/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.3-aarch64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.3-aarch64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.3-aarch64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.3-arm64v8 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.3-arm64v8 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.3-arm64v8 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.3-arm64v8
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.3-aarch64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.3-arm64v8
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.3-aarch64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.3-arm64v8
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.3-aarch64

amd64 3.11.2 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - amd64
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.11.2/amd64/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.2-x86_64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.2-amd64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.2-x86_64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.2-amd64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.2-x86_64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.2-amd64 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.2-x86_64
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.2-amd64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.2-x86_64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.2-amd64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.2-x86_64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.2-amd64

arm32v7 3.11.2 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - armhf
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.11.2/arm32v7/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.2-armhf -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.2-armhf -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.2-armhf -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.2-arm32v7 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.2-arm32v7 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.2-arm32v7 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.2-arm32v7
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.2-armhf
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.2-arm32v7
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.2-armhf
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.2-arm32v7
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.2-armhf

arm64v8 3.11.2 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - aarch64
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.11.2/arm64v8/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.2-aarch64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.2-aarch64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.2-aarch64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.2-arm64v8 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.2-arm64v8 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.2-arm64v8 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.2-arm64v8
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.2-aarch64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.2-arm64v8
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.2-aarch64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.2-arm64v8
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.2-aarch64

amd64 3.11.0 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - amd64
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.11.0/amd64/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.0-x86_64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.0-amd64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.0-x86_64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.0-amd64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.0-x86_64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.0-amd64 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.0-x86_64
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.0-amd64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.0-x86_64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.0-amd64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.0-x86_64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.0-amd64

arm32v7 3.11.0 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - armhf
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.11.0/arm32v7/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.0-armhf -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.0-armhf -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.0-armhf -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.0-arm32v7 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.0-arm32v7 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.0-arm32v7 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.0-arm32v7
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.0-armhf
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.0-arm32v7
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.0-armhf
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.0-arm32v7
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.0-armhf

arm64v8 3.11.0 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - aarch64
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.11.0/arm64v8/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.0-aarch64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.0-aarch64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.0-aarch64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.0-arm64v8 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.0-arm64v8 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.0-arm64v8 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.0-arm64v8
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.0-aarch64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.0-arm64v8
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.0-aarch64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.0-arm64v8
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.11.0-aarch64

amd64 3.10.9 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - amd64
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.10.9/amd64/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10-x86_64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.9-x86_64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.9-amd64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10-amd64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.9-x86_64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10-x86_64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.9-amd64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10-amd64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.9-x86_64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10-x86_64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.9-amd64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10-amd64 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.9-x86_64
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10-x86_64
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.9-amd64
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10-amd64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.9-x86_64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10-x86_64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.9-amd64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10-amd64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.9-x86_64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10-x86_64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.9-amd64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10-amd64

arm32v7 3.10.9 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - armhf
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.10.9/arm32v7/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.9-armhf -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10-armhf -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.9-armhf -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10-armhf -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.9-armhf -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10-armhf -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.9-arm32v7 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10-arm32v7 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.9-arm32v7 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10-arm32v7 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.9-arm32v7 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10-arm32v7 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.9-arm32v7
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10-arm32v7
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.9-armhf
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10-armhf
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.9-arm32v7
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10-arm32v7
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.9-armhf
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10-armhf
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.9-arm32v7
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10-arm32v7
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.9-armhf
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10-armhf

arm64v8 3.10.9 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - aarch64
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.10.9/arm64v8/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.9-aarch64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10-aarch64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.9-aarch64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10-aarch64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.9-aarch64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10-aarch64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.9-arm64v8 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10-arm64v8 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.9-arm64v8 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10-arm64v8 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.9-arm64v8 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10-arm64v8 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.9-arm64v8
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10-arm64v8
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.9-aarch64
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10-aarch64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.9-arm64v8
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10-arm64v8
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.9-aarch64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10-aarch64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.9-arm64v8
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10-arm64v8
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.9-aarch64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10-aarch64

amd64 3.10.5 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - amd64
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.10.5/amd64/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.5-x86_64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.5-amd64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.5-x86_64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.5-amd64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.5-x86_64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.5-amd64 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.5-x86_64
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.5-amd64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.5-x86_64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.5-amd64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.5-x86_64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.5-amd64

arm32v7 3.10.5 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - armhf
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.10.5/arm32v7/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.5-armhf -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.5-armhf -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.5-armhf -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.5-arm32v7 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.5-arm32v7 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.5-arm32v7 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.5-arm32v7
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.5-armhf
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.5-arm32v7
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.5-armhf
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.5-arm32v7
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.5-armhf

arm64v8 3.10.5 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - aarch64
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.10.5/arm64v8/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.5-aarch64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.5-aarch64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.5-aarch64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.5-arm64v8 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.5-arm64v8 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.5-arm64v8 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.5-arm64v8
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.5-aarch64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.5-arm64v8
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.5-aarch64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.5-arm64v8
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.5-aarch64

amd64 3.10.4 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - amd64
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.10.4/amd64/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.4-x86_64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.4-amd64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.4-x86_64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.4-amd64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.4-x86_64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.4-amd64 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.4-x86_64
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.4-amd64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.4-x86_64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.4-amd64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.4-x86_64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.4-amd64

arm32v7 3.10.4 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - armhf
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.10.4/arm32v7/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.4-armhf -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.4-armhf -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.4-armhf -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.4-arm32v7 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.4-arm32v7 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.4-arm32v7 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.4-arm32v7
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.4-armhf
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.4-arm32v7
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.4-armhf
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.4-arm32v7
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.4-armhf

arm64v8 3.10.4 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - aarch64
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.10.4/arm64v8/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.4-aarch64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.4-aarch64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.4-aarch64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.4-arm64v8 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.4-arm64v8 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.4-arm64v8 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.4-arm64v8
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.4-aarch64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.4-arm64v8
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.4-aarch64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.4-arm64v8
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.4-aarch64

amd64 3.10.3 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - amd64
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.10.3/amd64/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.3-x86_64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.3-amd64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.3-x86_64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.3-amd64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.3-x86_64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.3-amd64 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.3-x86_64
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.3-amd64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.3-x86_64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.3-amd64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.3-x86_64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.3-amd64

arm32v7 3.10.3 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - armhf
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.10.3/arm32v7/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.3-armhf -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.3-armhf -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.3-armhf -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.3-arm32v7 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.3-arm32v7 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.3-arm32v7 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.3-arm32v7
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.3-armhf
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.3-arm32v7
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.3-armhf
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.3-arm32v7
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.3-armhf

arm64v8 3.10.3 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - aarch64
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.10.3/arm64v8/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.3-aarch64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.3-aarch64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.3-aarch64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.3-arm64v8 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.3-arm64v8 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.3-arm64v8 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.3-arm64v8
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.3-aarch64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.3-arm64v8
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.3-aarch64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.3-arm64v8
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.3-aarch64

amd64 3.10.2 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - amd64
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.10.2/amd64/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.2-x86_64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.2-amd64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.2-x86_64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.2-amd64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.2-x86_64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.2-amd64 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.2-x86_64
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.2-amd64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.2-x86_64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.2-amd64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.2-x86_64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.2-amd64

arm32v7 3.10.2 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - armhf
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.10.2/arm32v7/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.2-armhf -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.2-armhf -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.2-armhf -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.2-arm32v7 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.2-arm32v7 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.2-arm32v7 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.2-arm32v7
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.2-armhf
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.2-arm32v7
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.2-armhf
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.2-arm32v7
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.2-armhf

arm64v8 3.10.2 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - aarch64
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.10.2/arm64v8/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.2-aarch64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.2-aarch64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.2-aarch64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.2-arm64v8 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.2-arm64v8 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.2-arm64v8 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.2-arm64v8
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.2-aarch64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.2-arm64v8
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.2-aarch64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.2-arm64v8
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.2-aarch64

amd64 3.10.1 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - amd64
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.10.1/amd64/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.1-x86_64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.1-amd64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.1-x86_64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.1-amd64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.1-x86_64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.1-amd64 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.1-x86_64
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.1-amd64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.1-x86_64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.1-amd64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.1-x86_64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.1-amd64

arm32v7 3.10.1 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - armhf
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.10.1/arm32v7/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.1-armhf -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.1-armhf -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.1-armhf -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.1-arm32v7 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.1-arm32v7 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.1-arm32v7 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.1-arm32v7
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.1-armhf
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.1-arm32v7
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.1-armhf
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.1-arm32v7
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.1-armhf

arm64v8 3.10.1 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - aarch64
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.10.1/arm64v8/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.1-aarch64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.1-aarch64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.1-aarch64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.1-arm64v8 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.1-arm64v8 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.1-arm64v8 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.1-arm64v8
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.1-aarch64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.1-arm64v8
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.1-aarch64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.1-arm64v8
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.1-aarch64

amd64 3.10.0 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - amd64
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.10.0/amd64/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.0-x86_64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.0-amd64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.0-x86_64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.0-amd64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.0-x86_64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.0-amd64 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.0-x86_64
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.0-amd64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.0-x86_64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.0-amd64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.0-x86_64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.0-amd64

arm32v7 3.10.0 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - armhf
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.10.0/arm32v7/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.0-armhf -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.0-armhf -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.0-armhf -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.0-arm32v7 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.0-arm32v7 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.0-arm32v7 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.0-arm32v7
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.0-armhf
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.0-arm32v7
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.0-armhf
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.0-arm32v7
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.0-armhf

arm64v8 3.10.0 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - aarch64
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.10.0/arm64v8/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.0-aarch64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.0-aarch64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.0-aarch64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.0-arm64v8 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.0-arm64v8 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.0-arm64v8 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.0-arm64v8
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.0-aarch64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.0-arm64v8
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.0-aarch64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.0-arm64v8
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.10.0-aarch64

amd64 3.9.6 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - amd64
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.9.6/amd64/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9-x86_64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9.6-x86_64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9.6-amd64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9-amd64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9.6-x86_64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9-x86_64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9.6-amd64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9-amd64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.9.6-x86_64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.9-x86_64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.9.6-amd64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.9-amd64 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9.6-x86_64
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9-x86_64
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9.6-amd64
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9-amd64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9.6-x86_64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9-x86_64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9.6-amd64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9-amd64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.9.6-x86_64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.9-x86_64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.9.6-amd64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.9-amd64

arm32v7 3.9.6 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - armhf
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.9.6/arm32v7/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9.6-armhf -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9-armhf -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9.6-armhf -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9-armhf -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.9.6-armhf -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.9-armhf -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9.6-arm32v7 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9-arm32v7 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9.6-arm32v7 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9-arm32v7 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.9.6-arm32v7 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.9-arm32v7 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9.6-arm32v7
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9-arm32v7
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9.6-armhf
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9-armhf
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9.6-arm32v7
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9-arm32v7
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9.6-armhf
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9-armhf
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.9.6-arm32v7
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.9-arm32v7
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.9.6-armhf
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.9-armhf

arm64v8 3.9.6 build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
    - aarch64
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
  script:
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
    - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
    - apk add --update git
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - cd alpine-3.9.6/arm64v8/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9.6-aarch64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9-aarch64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9.6-aarch64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9-aarch64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.9.6-aarch64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.9-aarch64 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9.6-arm64v8 -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9-arm64v8 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9.6-arm64v8 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9-arm64v8 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.9.6-arm64v8 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.9-arm64v8 .
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9.6-arm64v8
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9-arm64v8
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9.6-aarch64
    - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9-aarch64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9.6-arm64v8
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9-arm64v8
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9.6-aarch64
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9-aarch64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.9.6-arm64v8
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.9-arm64v8
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.9.6-aarch64
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:3.9-aarch64

gitlab manifest creation latest:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
    - manifest
  script:
    - mkdir /root/.docker
    - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:amd64
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:arm32v7
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:arm64v8
    - docker manifest create $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:latest $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:amd64 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:arm32v7 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:arm64v8
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:latest $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:amd64 --os linux --arch amd64
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:latest $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:arm32v7 --os linux --arch arm
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:latest $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:arm64v8 --os linux --arch arm64
    - docker manifest push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:latest

dockerhub manifest creation latest:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
    - manifest
  script:
    - mkdir /root/.docker
    - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:amd64
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:arm32v7
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:arm64v8
    - docker manifest create $DOCKER_REGISTRY_DOCKERHUB_REPO:latest $DOCKER_REGISTRY_DOCKERHUB_REPO:amd64 $DOCKER_REGISTRY_DOCKERHUB_REPO:arm32v7 $DOCKER_REGISTRY_DOCKERHUB_REPO:arm64v8
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:latest $DOCKER_REGISTRY_DOCKERHUB_REPO:amd64 --os linux --arch amd64
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:latest $DOCKER_REGISTRY_DOCKERHUB_REPO:arm32v7 --os linux --arch arm
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:latest $DOCKER_REGISTRY_DOCKERHUB_REPO:arm64v8 --os linux --arch arm64
    - docker manifest push $DOCKER_REGISTRY_DOCKERHUB_REPO:latest

gitlab manifest creation 3.13:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
    - manifest
  script:
    - mkdir /root/.docker
    - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13-amd64
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13-arm32v7
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13-arm64v8
    - docker manifest create $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13-amd64 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13-arm32v7 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13-arm64v8
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13-amd64 --os linux --arch amd64
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13-arm32v7 --os linux --arch arm
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13-arm64v8 --os linux --arch arm64
    - docker manifest push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13

dockerhub manifest creation 3.13:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
    - manifest
  script:
    - mkdir /root/.docker
    - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13-amd64
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13-arm32v7
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13-arm64v8
    - docker manifest create $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13-amd64 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13-arm32v7 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13-arm64v8
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13-amd64 --os linux --arch amd64
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13-arm32v7 --os linux --arch arm
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13-arm64v8 --os linux --arch arm64
    - docker manifest push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13

gitlab manifest creation 3.13.5:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
    - manifest
  script:
    - mkdir /root/.docker
    - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13.5-amd64
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13.5-arm32v7
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13.5-arm64v8
    - docker manifest create $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13.5 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13.5-amd64 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13.5-arm32v7 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13.5-arm64v8
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13.5 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13.5-amd64 --os linux --arch amd64
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13.5 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13.5-arm32v7 --os linux --arch arm
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13.5 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13.5-arm64v8 --os linux --arch arm64
    - docker manifest push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.13.5

dockerhub manifest creation 3.13.5:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
    - manifest
  script:
    - mkdir /root/.docker
    - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13.5-amd64
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13.5-arm32v7
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13.5-arm64v8
    - docker manifest create $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13.5 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13.5-amd64 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13.5-arm32v7 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13.5-arm64v8
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13.5 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13.5-amd64 --os linux --arch amd64
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13.5 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13.5-arm32v7 --os linux --arch arm
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13.5 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13.5-arm64v8 --os linux --arch arm64
    - docker manifest push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.13.5

gitlab manifest creation 3.12:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
    - manifest
  script:
    - mkdir /root/.docker
    - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12-amd64
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12-arm32v7
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12-arm64v8
    - docker manifest create $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12-amd64 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12-arm32v7 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12-arm64v8
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12-amd64 --os linux --arch amd64
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12-arm32v7 --os linux --arch arm
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12-arm64v8 --os linux --arch arm64
    - docker manifest push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12

dockerhub manifest creation 3.12:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
    - manifest
  script:
    - mkdir /root/.docker
    - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12-amd64
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12-arm32v7
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12-arm64v8
    - docker manifest create $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12-amd64 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12-arm32v7 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12-arm64v8
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12-amd64 --os linux --arch amd64
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12-arm32v7 --os linux --arch arm
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12-arm64v8 --os linux --arch arm64
    - docker manifest push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12

gitlab manifest creation 3.12.7:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
    - manifest
  script:
    - mkdir /root/.docker
    - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.7-amd64
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.7-arm32v7
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.7-arm64v8
    - docker manifest create $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.7 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.7-amd64 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.7-arm32v7 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.7-arm64v8
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.7 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.7-amd64 --os linux --arch amd64
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.7 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.7-arm32v7 --os linux --arch arm
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.7 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.7-arm64v8 --os linux --arch arm64
    - docker manifest push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.7

dockerhub manifest creation 3.12.7:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
    - manifest
  script:
    - mkdir /root/.docker
    - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.7-amd64
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.7-arm32v7
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.7-arm64v8
    - docker manifest create $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.7 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.7-amd64 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.7-arm32v7 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.7-arm64v8
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.7 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.7-amd64 --os linux --arch amd64
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.7 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.7-arm32v7 --os linux --arch arm
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.7 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.7-arm64v8 --os linux --arch arm64
    - docker manifest push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.7

gitlab manifest creation 3.12.0:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
    - manifest
  script:
    - mkdir /root/.docker
    - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.0-amd64
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.0-arm32v7
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.0-arm64v8
    - docker manifest create $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.0 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.0-amd64 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.0-arm32v7 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.0-arm64v8
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.0 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.0-amd64 --os linux --arch amd64
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.0 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.0-arm32v7 --os linux --arch arm
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.0 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.0-arm64v8 --os linux --arch arm64
    - docker manifest push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.12.0

dockerhub manifest creation 3.12.0:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
    - manifest
  script:
    - mkdir /root/.docker
    - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.0-amd64
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.0-arm32v7
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.0-arm64v8
    - docker manifest create $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.0 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.0-amd64 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.0-arm32v7 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.0-arm64v8
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.0 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.0-amd64 --os linux --arch amd64
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.0 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.0-arm32v7 --os linux --arch arm
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.0 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.0-arm64v8 --os linux --arch arm64
    - docker manifest push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.12.0

gitlab manifest creation 3.11:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
    - manifest
  script:
    - mkdir /root/.docker
    - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11-amd64
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11-arm32v7
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11-arm64v8
    - docker manifest create $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11-amd64 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11-arm32v7 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11-arm64v8
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11-amd64 --os linux --arch amd64
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11-arm32v7 --os linux --arch arm
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11-arm64v8 --os linux --arch arm64
    - docker manifest push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11

dockerhub manifest creation 3.11:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
    - manifest
  script:
    - mkdir /root/.docker
    - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11-amd64
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11-arm32v7
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11-arm64v8
    - docker manifest create $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11-amd64 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11-arm32v7 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11-arm64v8
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11-amd64 --os linux --arch amd64
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11-arm32v7 --os linux --arch arm
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11-arm64v8 --os linux --arch arm64
    - docker manifest push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11

gitlab manifest creation 3.11.11:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
    - manifest
  script:
    - mkdir /root/.docker
    - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.11-amd64
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.11-arm32v7
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.11-arm64v8
    - docker manifest create $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.11 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.11-amd64 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.11-arm32v7 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.11-arm64v8
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.11 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.11-amd64 --os linux --arch amd64
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.11 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.11-arm32v7 --os linux --arch arm
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.11 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.11-arm64v8 --os linux --arch arm64
    - docker manifest push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.11

dockerhub manifest creation 3.11.11:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
    - manifest
  script:
    - mkdir /root/.docker
    - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.11-amd64
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.11-arm32v7
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.11-arm64v8
    - docker manifest create $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.11 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.11-amd64 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.11-arm32v7 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.11-arm64v8
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.11 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.11-amd64 --os linux --arch amd64
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.11 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.11-arm32v7 --os linux --arch arm
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.11 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.11-arm64v8 --os linux --arch arm64
    - docker manifest push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.11

gitlab manifest creation 3.11.6:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
    - manifest
  script:
    - mkdir /root/.docker
    - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.6-amd64
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.6-arm32v7
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.6-arm64v8
    - docker manifest create $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.6 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.6-amd64 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.6-arm32v7 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.6-arm64v8
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.6 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.6-amd64 --os linux --arch amd64
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.6 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.6-arm32v7 --os linux --arch arm
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.6 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.6-arm64v8 --os linux --arch arm64
    - docker manifest push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.6

dockerhub manifest creation 3.11.6:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
    - manifest
  script:
    - mkdir /root/.docker
    - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.6-amd64
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.6-arm32v7
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.6-arm64v8
    - docker manifest create $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.6 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.6-amd64 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.6-arm32v7 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.6-arm64v8
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.6 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.6-amd64 --os linux --arch amd64
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.6 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.6-arm32v7 --os linux --arch arm
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.6 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.6-arm64v8 --os linux --arch arm64
    - docker manifest push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.6

gitlab manifest creation 3.11.5:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
    - manifest
  script:
    - mkdir /root/.docker
    - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.5-amd64
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.5-arm32v7
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.5-arm64v8
    - docker manifest create $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.5 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.5-amd64 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.5-arm32v7 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.5-arm64v8
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.5 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.5-amd64 --os linux --arch amd64
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.5 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.5-arm32v7 --os linux --arch arm
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.5 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.5-arm64v8 --os linux --arch arm64
    - docker manifest push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.5

dockerhub manifest creation 3.11.5:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
    - manifest
  script:
    - mkdir /root/.docker
    - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.5-amd64
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.5-arm32v7
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.5-arm64v8
    - docker manifest create $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.5 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.5-amd64 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.5-arm32v7 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.5-arm64v8
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.5 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.5-amd64 --os linux --arch amd64
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.5 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.5-arm32v7 --os linux --arch arm
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.5 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.5-arm64v8 --os linux --arch arm64
    - docker manifest push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.5

gitlab manifest creation 3.11.3:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
    - manifest
  script:
    - mkdir /root/.docker
    - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.3-amd64
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.3-arm32v7
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.3-arm64v8
    - docker manifest create $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.3 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.3-amd64 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.3-arm32v7 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.3-arm64v8
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.3 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.3-amd64 --os linux --arch amd64
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.3 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.3-arm32v7 --os linux --arch arm
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.3 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.3-arm64v8 --os linux --arch arm64
    - docker manifest push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.3

dockerhub manifest creation 3.11.3:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
    - manifest
  script:
    - mkdir /root/.docker
    - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.3-amd64
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.3-arm32v7
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.3-arm64v8
    - docker manifest create $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.3 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.3-amd64 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.3-arm32v7 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.3-arm64v8
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.3 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.3-amd64 --os linux --arch amd64
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.3 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.3-arm32v7 --os linux --arch arm
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.3 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.3-arm64v8 --os linux --arch arm64
    - docker manifest push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.3

gitlab manifest creation 3.11.2:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
    - manifest
  script:
    - mkdir /root/.docker
    - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.2-amd64
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.2-arm32v7
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.2-arm64v8
    - docker manifest create $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.2 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.2-amd64 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.2-arm32v7 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.2-arm64v8
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.2 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.2-amd64 --os linux --arch amd64
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.2 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.2-arm32v7 --os linux --arch arm
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.2 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.2-arm64v8 --os linux --arch arm64
    - docker manifest push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.2

dockerhub manifest creation 3.11.2:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
    - manifest
  script:
    - mkdir /root/.docker
    - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.2-amd64
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.2-arm32v7
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.2-arm64v8
    - docker manifest create $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.2 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.2-amd64 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.2-arm32v7 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.2-arm64v8
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.2 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.2-amd64 --os linux --arch amd64
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.2 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.2-arm32v7 --os linux --arch arm
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.2 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.2-arm64v8 --os linux --arch arm64
    - docker manifest push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.2

gitlab manifest creation 3.11.0:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
    - manifest
  script:
    - mkdir /root/.docker
    - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.0-amd64
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.0-arm32v7
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.0-arm64v8
    - docker manifest create $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.0 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.0-amd64 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.0-arm32v7 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.0-arm64v8
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.0 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.0-amd64 --os linux --arch amd64
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.0 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.0-arm32v7 --os linux --arch arm
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.0 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.0-arm64v8 --os linux --arch arm64
    - docker manifest push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.11.0

dockerhub manifest creation 3.11.0:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
    - manifest
  script:
    - mkdir /root/.docker
    - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.0-amd64
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.0-arm32v7
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.0-arm64v8
    - docker manifest create $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.0 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.0-amd64 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.0-arm32v7 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.0-arm64v8
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.0 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.0-amd64 --os linux --arch amd64
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.0 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.0-arm32v7 --os linux --arch arm
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.0 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.0-arm64v8 --os linux --arch arm64
    - docker manifest push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.11.0

gitlab manifest creation 3.10:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
    - manifest
  script:
    - mkdir /root/.docker
    - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10-amd64
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10-arm32v7
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10-arm64v8
    - docker manifest create $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10-amd64 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10-arm32v7 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10-arm64v8
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10-amd64 --os linux --arch amd64
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10-arm32v7 --os linux --arch arm
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10-arm64v8 --os linux --arch arm64
    - docker manifest push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10

dockerhub manifest creation 3.10:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
    - manifest
  script:
    - mkdir /root/.docker
    - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10-amd64
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10-arm32v7
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10-arm64v8
    - docker manifest create $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10-amd64 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10-arm32v7 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10-arm64v8
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10-amd64 --os linux --arch amd64
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10-arm32v7 --os linux --arch arm
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10-arm64v8 --os linux --arch arm64
    - docker manifest push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10

gitlab manifest creation 3.10.9:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
    - manifest
  script:
    - mkdir /root/.docker
    - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.9-amd64
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.9-arm32v7
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.9-arm64v8
    - docker manifest create $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.9 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.9-amd64 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.9-arm32v7 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.9-arm64v8
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.9 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.9-amd64 --os linux --arch amd64
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.9 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.9-arm32v7 --os linux --arch arm
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.9 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.9-arm64v8 --os linux --arch arm64
    - docker manifest push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.9

dockerhub manifest creation 3.10.9:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
    - manifest
  script:
    - mkdir /root/.docker
    - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.9-amd64
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.9-arm32v7
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.9-arm64v8
    - docker manifest create $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.9 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.9-amd64 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.9-arm32v7 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.9-arm64v8
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.9 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.9-amd64 --os linux --arch amd64
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.9 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.9-arm32v7 --os linux --arch arm
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.9 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.9-arm64v8 --os linux --arch arm64
    - docker manifest push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.9

gitlab manifest creation 3.10.5:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
    - manifest
  script:
    - mkdir /root/.docker
    - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.5-amd64
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.5-arm32v7
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.5-arm64v8
    - docker manifest create $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.5 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.5-amd64 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.5-arm32v7 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.5-arm64v8
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.5 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.5-amd64 --os linux --arch amd64
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.5 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.5-arm32v7 --os linux --arch arm
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.5 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.5-arm64v8 --os linux --arch arm64
    - docker manifest push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.5

dockerhub manifest creation 3.10.5:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
    - manifest
  script:
    - mkdir /root/.docker
    - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.5-amd64
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.5-arm32v7
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.5-arm64v8
    - docker manifest create $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.5 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.5-amd64 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.5-arm32v7 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.5-arm64v8
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.5 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.5-amd64 --os linux --arch amd64
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.5 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.5-arm32v7 --os linux --arch arm
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.5 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.5-arm64v8 --os linux --arch arm64
    - docker manifest push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.5

gitlab manifest creation 3.10.4:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
    - manifest
  script:
    - mkdir /root/.docker
    - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.4-amd64
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.4-arm32v7
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.4-arm64v8
    - docker manifest create $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.4 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.4-amd64 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.4-arm32v7 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.4-arm64v8
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.4 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.4-amd64 --os linux --arch amd64
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.4 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.4-arm32v7 --os linux --arch arm
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.4 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.4-arm64v8 --os linux --arch arm64
    - docker manifest push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.4

dockerhub manifest creation 3.10.4:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
    - manifest
  script:
    - mkdir /root/.docker
    - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.4-amd64
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.4-arm32v7
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.4-arm64v8
    - docker manifest create $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.4 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.4-amd64 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.4-arm32v7 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.4-arm64v8
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.4 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.4-amd64 --os linux --arch amd64
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.4 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.4-arm32v7 --os linux --arch arm
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.4 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.4-arm64v8 --os linux --arch arm64
    - docker manifest push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.4

gitlab manifest creation 3.10.3:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
    - manifest
  script:
    - mkdir /root/.docker
    - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.3-amd64
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.3-arm32v7
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.3-arm64v8
    - docker manifest create $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.3 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.3-amd64 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.3-arm32v7 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.3-arm64v8
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.3 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.3-amd64 --os linux --arch amd64
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.3 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.3-arm32v7 --os linux --arch arm
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.3 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.3-arm64v8 --os linux --arch arm64
    - docker manifest push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.3

dockerhub manifest creation 3.10.3:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
    - manifest
  script:
    - mkdir /root/.docker
    - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.3-amd64
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.3-arm32v7
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.3-arm64v8
    - docker manifest create $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.3 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.3-amd64 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.3-arm32v7 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.3-arm64v8
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.3 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.3-amd64 --os linux --arch amd64
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.3 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.3-arm32v7 --os linux --arch arm
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.3 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.3-arm64v8 --os linux --arch arm64
    - docker manifest push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.3

gitlab manifest creation 3.10.2:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
    - manifest
  script:
    - mkdir /root/.docker
    - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.2-amd64
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.2-arm32v7
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.2-arm64v8
    - docker manifest create $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.2 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.2-amd64 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.2-arm32v7 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.2-arm64v8
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.2 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.2-amd64 --os linux --arch amd64
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.2 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.2-arm32v7 --os linux --arch arm
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.2 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.2-arm64v8 --os linux --arch arm64
    - docker manifest push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.2

dockerhub manifest creation 3.10.2:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
    - manifest
  script:
    - mkdir /root/.docker
    - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.2-amd64
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.2-arm32v7
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.2-arm64v8
    - docker manifest create $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.2 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.2-amd64 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.2-arm32v7 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.2-arm64v8
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.2 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.2-amd64 --os linux --arch amd64
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.2 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.2-arm32v7 --os linux --arch arm
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.2 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.2-arm64v8 --os linux --arch arm64
    - docker manifest push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.2

gitlab manifest creation 3.10.1:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
    - manifest
  script:
    - mkdir /root/.docker
    - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.1-amd64
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.1-arm32v7
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.1-arm64v8
    - docker manifest create $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.1 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.1-amd64 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.1-arm32v7 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.1-arm64v8
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.1 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.1-amd64 --os linux --arch amd64
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.1 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.1-arm32v7 --os linux --arch arm
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.1 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.1-arm64v8 --os linux --arch arm64
    - docker manifest push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.1

dockerhub manifest creation 3.10.1:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
    - manifest
  script:
    - mkdir /root/.docker
    - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.1-amd64
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.1-arm32v7
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.1-arm64v8
    - docker manifest create $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.1 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.1-amd64 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.1-arm32v7 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.1-arm64v8
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.1 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.1-amd64 --os linux --arch amd64
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.1 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.1-arm32v7 --os linux --arch arm
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.1 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.1-arm64v8 --os linux --arch arm64
    - docker manifest push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.1

gitlab manifest creation 3.10.0:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
    - manifest
  script:
    - mkdir /root/.docker
    - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.0-amd64
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.0-arm32v7
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.0-arm64v8
    - docker manifest create $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.0 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.0-amd64 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.0-arm32v7 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.0-arm64v8
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.0 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.0-amd64 --os linux --arch amd64
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.0 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.0-arm32v7 --os linux --arch arm
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.0 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.0-arm64v8 --os linux --arch arm64
    - docker manifest push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.10.0

dockerhub manifest creation 3.10.0:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
    - manifest
  script:
    - mkdir /root/.docker
    - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.0-amd64
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.0-arm32v7
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.0-arm64v8
    - docker manifest create $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.0 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.0-amd64 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.0-arm32v7 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.0-arm64v8
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.0 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.0-amd64 --os linux --arch amd64
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.0 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.0-arm32v7 --os linux --arch arm
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.0 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.0-arm64v8 --os linux --arch arm64
    - docker manifest push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.10.0

gitlab manifest creation 3.9:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
    - manifest
  script:
    - mkdir /root/.docker
    - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9-amd64
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9-arm32v7
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9-arm64v8
    - docker manifest create $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9-amd64 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9-arm32v7 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9-arm64v8
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9-amd64 --os linux --arch amd64
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9-arm32v7 --os linux --arch arm
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9-arm64v8 --os linux --arch arm64
    - docker manifest push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9

dockerhub manifest creation 3.9:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
    - manifest
  script:
    - mkdir /root/.docker
    - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9-amd64
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9-arm32v7
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9-arm64v8
    - docker manifest create $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9-amd64 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9-arm32v7 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9-arm64v8
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9-amd64 --os linux --arch amd64
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9-arm32v7 --os linux --arch arm
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9-arm64v8 --os linux --arch arm64
    - docker manifest push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9

gitlab manifest creation 3.9.6:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
    - manifest
  script:
    - mkdir /root/.docker
    - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9.6-amd64
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9.6-arm32v7
    - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9.6-arm64v8
    - docker manifest create $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9.6 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9.6-amd64 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9.6-arm32v7 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9.6-arm64v8
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9.6 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9.6-amd64 --os linux --arch amd64
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9.6 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9.6-arm32v7 --os linux --arch arm
    - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9.6 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9.6-arm64v8 --os linux --arch arm64
    - docker manifest push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:3.9.6

dockerhub manifest creation 3.9.6:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
    - manifest
  script:
    - mkdir /root/.docker
    - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9.6-amd64
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9.6-arm32v7
    - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9.6-arm64v8
    - docker manifest create $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9.6 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9.6-amd64 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9.6-arm32v7 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9.6-arm64v8
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9.6 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9.6-amd64 --os linux --arch amd64
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9.6 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9.6-arm32v7 --os linux --arch arm
    - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9.6 $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9.6-arm64v8 --os linux --arch arm64
    - docker manifest push $DOCKER_REGISTRY_DOCKERHUB_REPO:3.9.6
